include: 1_spatial.yml

target_default: 3_config

packages:
  - yaml
  - RJSONIO
  - dplyr
  - readr
  - stringr
  - glmtools
  - reticulate

sources:
  - src/spatial_utils.R
  - src/file_utils.R

targets:
  3_config:
    depends:
      - out_data/pb0_config.json
      - out_data/pb0_nml_files.zip


  export_start:
    command: c(I('1980-04-01'))

  export_stop:
    command: c(I('2018-12-31'))

  out_data/pb0_config.json:
    command: bundle_nml_files(target_name,
      xwalk_meteo_fl_names,
      modeled_lake_ids,
      nml_ind = '../lake-temperature-process-models/2_prep/out/toha_glm3_nml_group.yml',
      gnis_names_fl = '../lake-temperature-model-prep/2_crosswalk_munge/out/gnisname_nhdhr_xwalk.rds')

  out_data/pb0_nml_files.zip:
    command: zip_nml_files(target_name,
      'out_data/pb0_config.json')

  out_data/pgdl_config.csv:
    command: simplify_pgdl_configs(
      target_name,
      orig_cfg_file = '../lake-temperature-neural-networks/3_assess/out/posthoc_config.csv',
      orig_col_types = I('cccicccdiddddiiiiilccccccil'))

  pgdl_fits_df:
    command: build_pgdl_fits_df(
      orig_cfg_file = '../lake-temperature-neural-networks/3_assess/out/posthoc_config.csv',
      orig_col_types = I('cccicccdiddddiiiiilccccccil'),
      phase = I('finetune'), goal = I('predict'),
      dummy = I('2020-04-23'))

  out_data/pgdl_fit_zips.yml:
    command: zip_pgdl_fit_groups(
      outfile = target_name,
      fits_df = pgdl_fits_df,
      site_groups = pgdl_site_ids_grouped,
      phase = I('finetune'))

  out_data/pgdl_fit_lakes.png:
    command: plot_grouped_lakes_preview(target_name,
      spatial_groups, pgdl_site_ids_grouped,
      county_bounds = us_counties_sf,
      lakes_sf_fl = "../lake-temperature-model-prep/1_crosswalk_fetch/out/canonical_lakes_sf.rds")
