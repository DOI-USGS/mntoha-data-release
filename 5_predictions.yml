
target_default: 5_predictions

include:
  - 4_inputs.yml

packages:
  - yaml
  - whisker
  - dplyr
  - tidyr
  - meddle
  - readr
  - rgdal
  - stringr
  - glmtools
  - sf


sources:
  - src/file_utils.R
  - src/spatial_utils.R
  - src/plot_utils.R

targets:
  5_predictions:
    depends:
      - out/5_predictions_zips.yml
      - out/5_irradiance_zips.yml
      - out_data/predict_lakes.png

  pb_predictions_df:
    command: export_pb_df(site_ids = modeled_lake_ids,
      exp_prefix = I('pb0'), exp_suffix = I('temperatures'),
      model_out_ind = '../lake-temperature-process-models/3_run/out/toha_tasks.rds.ind')

  irradiance_df:
    command: export_pb_df(site_ids = modeled_lake_ids,
      exp_prefix = I('pb0'), exp_suffix = I('irradiance'),
      model_out_ind = '../lake-temperature-process-models/3_run/out/toha_tasks.rds.ind')

  pgdl_predictions_df:
    command: build_pgdl_predict_df(
      pgdl_config_file = 'out_data/pgdl_config.csv',
      model_dir = I('../lake-temperature-neural-networks/2_model/out/200316_runs'),
      prefix = I('pgdl'), suffix = I('temperatures'),
      dummy = I('2020-03-17'))

  out/5_predictions_zips.yml:
    command: zip_pb_export_groups(target_name,
      file_info_df = pb_predictions_df,
      site_groups = site_ids_grouped,
      export_start = export_start,
      export_stop = export_stop,
      export = I('pb0_predictions'))

  out/5_irradiance_zips.yml:
    command: zip_pb_export_groups(target_name,
      file_info_df = irradiance_df,
      site_groups = site_ids_grouped,
      export_start = export_start,
      export_stop = export_stop,
      export = I('irradiance'))

  out/5_pgdl_predictions_zips.yml:
    command: zip_pgdl_prediction_groups(target_name, pgdl_predictions_df,
      site_groups = pgdl_site_ids_grouped)

  out_data/predict_lakes.png:
    command: plot_grouped_lakes_preview(target_name,
      spatial_groups, site_ids_grouped,
      county_bounds = us_counties_sf,
      lakes_sf_fl = "../lake-temperature-model-prep/1_crosswalk_fetch/out/canonical_lakes_sf.rds")


